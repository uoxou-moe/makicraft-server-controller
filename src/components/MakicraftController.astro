---
---

<div class="container">
  <div>
    <button id="getStatusBtn">状態を取得</button>
    <button id="startInstanceBtn">インスタンスを起動</button>
  </div>

  <h3>結果:</h3>
  <pre id="result">ここに結果が表示されます。</pre>
</div>

<style>
  .container { max-width: 600px; margin: 2em auto; padding: 20px; border: 1px solid #ccc; border-radius: 8px; box-shadow: 0 2px 4px rgba(0,0,0,0.1); }
  input, button { padding: 10px; margin: 5px; font-size: 16px; border-radius: 4px; border: 1px solid #ccc; }
  button { cursor: pointer; background-color: #0d6efd; color: white; border-color: #0d6efd; transition: background-color 0.2s; }
  button:hover { background-color: #0b5ed7; }
  #result { margin-top: 20px; padding: 15px; background-color: #f8f9fa; border: 1px solid #dee2e6; border-radius: 5px; white-space: pre-wrap; word-wrap: break-word; min-height: 100px; font-family: 'Courier New', Courier, monospace; }
</style>

<script>
  const apiBaseUrl = import.meta.env.PUBLIC_API_ENDPOINT;
  const instanceId = import.meta.env.PUBLIC_INSTANCE_ID;

  const getStatusBtn = document.getElementById('getStatusBtn');
  const startInstanceBtn = document.getElementById('startInstanceBtn');
  const resultDiv = document.getElementById('result');

  async function sendRequest(path: string, instanceId: string) {
    if (!resultDiv) return;
    resultDiv.textContent = '処理中...';

    if (!instanceId) {
      resultDiv.textContent = 'エラー: Missing instance ID';
      return;
    }

    try {
      const response = await fetch(`${apiBaseUrl}${path}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ instanceId: instanceId }),
      });

      const data = await response.json();

      if (!response.ok) {
        throw new Error(data.error || '不明なエラーが発生しました');
      }

      resultDiv.textContent = JSON.stringify(data, null, 2);

    } catch (error) {
      console.error('API request failed:', error);
      if (error instanceof Error) {
        resultDiv.textContent = `エラー: ${error.message}`;
      } else {
        resultDiv.textContent = '予期せぬエラーが発生しました。';
      }
    }
  }

  getStatusBtn?.addEventListener('click', () => {
    sendRequest('/status', instanceId);
  });

  startInstanceBtn?.addEventListener('click', () => {
    // start is not implemented yet
    sendRequest('/start', instanceId);
  });
</script>
